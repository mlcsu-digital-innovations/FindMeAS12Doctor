// <auto-generated />
using System;
using Fmas12d.Business;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fmas12d.Business.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fmas12d.Data.Entities.Assessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Address4")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("AmhpUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CcgId")
                        .HasColumnType("int");

                    b.Property<int?>("CompletedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("CompletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("CompletionConfirmationByUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<string>("MeetingArrangementComment")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("MustBeCompletedBy")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("NonPaymentLocationId")
                        .HasColumnType("int");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("PreferredDoctorGenderTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ReferralId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("ScheduledTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<int?>("UnsuccessfulAssessmentTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmhpUserId");

                    b.HasIndex("CcgId");

                    b.HasIndex("CompletedByUserId");

                    b.HasIndex("CompletionConfirmationByUserId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("NonPaymentLocationId");

                    b.HasIndex("PreferredDoctorGenderTypeId");

                    b.HasIndex("ReferralId");

                    b.HasIndex("SpecialityId");

                    b.HasIndex("UnsuccessfulAssessmentTypeId");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Address4")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int?>("CcgId")
                        .HasColumnType("int");

                    b.Property<int?>("CompletedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("CompletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("CompletionConfirmationByUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<string>("MeetingArrangementComment")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("MustBeCompletedBy")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("NonPaymentLocationId")
                        .HasColumnType("int");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("PreferredDoctorGenderTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ReferralId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("ScheduledTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<int?>("UnsuccessfulAssessmentTypeId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("AssessmentsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssessmentDetailTypeId")
                        .HasColumnType("int");

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("AssessmentDetailTypeId", "AssessmentId");

                    b.HasIndex("AssessmentId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("AssessmentDetails");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDetailAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssessmentDetailTypeId")
                        .HasColumnType("int");

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("AssessmentDetailsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDetailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AssessmentDetailTypes");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDetailTypeAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("AssessmentDetailTypesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDoctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<int?>("AttendanceConfirmedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("DoctorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("AssessmentId", "DoctorUserId");

                    b.HasIndex("AttendanceConfirmedByUserId");

                    b.HasIndex("DoctorUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("StatusId");

                    b.ToTable("AssessmentDoctors");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDoctorAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<int?>("AttendanceConfirmedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("DoctorUserId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("AssessmentDoctorsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDoctorStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AssessmentDoctorStatuses");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDoctorStatusAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("AssessmentDoctorStatusesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.BankDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameOnAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("SortCode")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VsrNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("CcgId", "UserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("UserId");

                    b.ToTable("BankDetails");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.BankDetailAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("NameOnAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("SortCode")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VsrNumber")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("BankDetailsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Ccg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostCentre")
                        .HasColumnType("int");

                    b.Property<decimal>("FailedAssessmentPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaymentApprovalRequired")
                        .HasColumnType("bit");

                    b.Property<string>("LongCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<decimal>("SuccessfulPencePerMile")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnsuccessfulPencePerMile")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LongCode")
                        .IsUnique()
                        .HasFilter("[LongCode] IS NOT NULL");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ShortCode")
                        .IsUnique()
                        .HasFilter("[ShortCode] IS NOT NULL");

                    b.ToTable("Ccgs");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.CcgAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("CostCentre")
                        .HasColumnType("int");

                    b.Property<decimal>("FailedAssessmentPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaymentApprovalRequired")
                        .HasColumnType("bit");

                    b.Property<string>("LongCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ShortCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<decimal>("SuccessfulPencePerMile")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnsuccessfulPencePerMile")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AuditId");

                    b.ToTable("CcgsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ClaimStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ClaimStatuses");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ClaimStatusAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("ClaimStatusesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ContactDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<int>("ContactDetailTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("TelephoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("CcgId", "ContactDetailTypeId", "UserId");

                    b.HasIndex("ContactDetailTypeId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("UserId");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ContactDetailAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<int>("ContactDetailTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("TelephoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("ContactDetailsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ContactDetailType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ContactDetailTypes");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ContactDetailTypeAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("ContactDetailTypesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.DoctorStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("AvailabilityEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("AvailabilityStart")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityEnd1")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityEnd2")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityEnd3")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("ExtendedAvailabilityLatitude1")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal?>("ExtendedAvailabilityLatitude2")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal?>("ExtendedAvailabilityLatitude3")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal?>("ExtendedAvailabilityLongitude1")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("ExtendedAvailabilityLongitude2")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("ExtendedAvailabilityLongitude3")
                        .HasColumnType("decimal(9,6)");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityStart1")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityStart2")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityStart3")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("UserId");

                    b.ToTable("DoctorStatuses");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.DoctorStatusAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("AvailabilityEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("AvailabilityStart")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityEnd1")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityEnd2")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityEnd3")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("ExtendedAvailabilityLatitude1")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal?>("ExtendedAvailabilityLatitude2")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal?>("ExtendedAvailabilityLatitude3")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal?>("ExtendedAvailabilityLongitude1")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("ExtendedAvailabilityLongitude2")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("ExtendedAvailabilityLongitude3")
                        .HasColumnType("decimal(9,6)");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityStart1")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityStart2")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("ExtendedAvailabilityStart3")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("DoctorStatusesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.GenderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("GenderTypes");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.GenderTypeAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("GenderTypesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.GpPractice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("CcgId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("GpPractices");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.GpPracticeAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("AuditId");

                    b.ToTable("GpPracticesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.NonPaymentLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("NonPaymentLocationTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("CcgId", "NonPaymentLocationTypeId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("NonPaymentLocationTypeId");

                    b.ToTable("NonPaymentLocations");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.NonPaymentLocationAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("NonPaymentLocationTypeId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("NonPaymentLocationsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.NonPaymentLocationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("NonPaymentLocationTypes");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.NonPaymentLocationTypeAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("NonPaymentLocationTypesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.NotificationText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MessageTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("NotificationTexts");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.NotificationTextAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MessageTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("NotificationTextsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.OnCallUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DateTimeEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateTimeStart")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("UserId");

                    b.ToTable("OnCallUsers");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.OnCallUserAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DateTimeEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateTimeStart")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("OnCallUsersAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Organisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.OrganisationAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("OrganisationsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlternativeIdentifier")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("CcgId")
                        .HasColumnType("int");

                    b.Property<int?>("GpPracticeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<long?>("NhsNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("ResidentialPostcode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("AlternativeIdentifier")
                        .IsUnique()
                        .HasFilter("[AlternativeIdentifier] IS NOT NULL");

                    b.HasIndex("CcgId");

                    b.HasIndex("GpPracticeId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("NhsNumber")
                        .IsUnique()
                        .HasFilter("[NhsNumber] IS NOT NULL");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PatientAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlternativeIdentifier")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int?>("CcgId")
                        .HasColumnType("int");

                    b.Property<int?>("GpPracticeId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<long?>("NhsNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("ResidentialPostcode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("AuditId");

                    b.ToTable("PatientsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethodTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("CcgId", "PaymentMethodTypeId", "UserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("PaymentMethodTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentMethodAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethodTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("PaymentMethodsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentMethodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("PaymentMethodTypes");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentMethodTypeAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("PaymentMethodTypesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Criteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("PaymentRuleSetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("PaymentRuleSetId");

                    b.ToTable("PaymentRules");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentRuleAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Criteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("PaymentRuleSetId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("PaymentRulesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentRuleSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateTimeFrom")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateTimeTo")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CcgId");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("PaymentRuleSets");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentRuleSetAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("CcgId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateTimeFrom")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateTimeTo")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("PaymentRuleSetsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ProfileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProfileTypes");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ProfileTypeAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("ProfileTypesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Referral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPlannedAssessment")
                        .HasColumnType("bit");

                    b.Property<int>("LeadAmhpUserId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("ReferralStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LeadAmhpUserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("PatientId");

                    b.HasIndex("ReferralStatusId");

                    b.ToTable("Referrals");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ReferralAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPlannedAssessment")
                        .HasColumnType("bit");

                    b.Property<int>("LeadAmhpUserId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("ReferralStatusId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("ReferralsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ReferralStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ReferralStatuses");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ReferralStatusAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("ReferralStatusesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Section12ApprovalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Section12ApprovalStatuses");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Section12ApprovalStatusAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("Section12ApprovalStatusesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Speciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("FinanceMileageSubjectiveCode")
                        .HasColumnType("int");

                    b.Property<int?>("FinanceSubjectiveCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LevelOfUrgencyTimescaleMinutes")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("NonSection12Payment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Section12Payment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.SpecialityAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("FinanceMileageSubjectiveCode")
                        .HasColumnType("int");

                    b.Property<int?>("FinanceSubjectiveCode")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LevelOfUrgencyTimescaleMinutes")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("NonSection12Payment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Section12Payment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AuditId");

                    b.ToTable("SpecialitiesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UnsuccessfulAssessmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("UnsuccessfulAssessmentTypes");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UnsuccessfulAssessmentTypeAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("AuditId");

                    b.ToTable("UnsuccessfulAssessmentTypesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("GenderTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("GmcNumber")
                        .HasColumnType("int");

                    b.Property<bool>("HasReadTermsAndConditions")
                        .HasColumnType("bit");

                    b.Property<string>("IdentityServerIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Section12ApprovalStatusId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("Section12ExpiryDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("GenderTypeId");

                    b.HasIndex("GmcNumber")
                        .IsUnique()
                        .HasFilter("[GmcNumber] IS NOT NULL");

                    b.HasIndex("IdentityServerIdentifier")
                        .IsUnique();

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("ProfileTypeId");

                    b.HasIndex("Section12ApprovalStatusId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UserAssessmentClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AssessmentPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ClaimReference")
                        .HasColumnType("int");

                    b.Property<int?>("ClaimStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("HasBeenDeallocated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAttendanceConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClaimable")
                        .HasColumnType("bit");

                    b.Property<int?>("Mileage")
                        .HasColumnType("int");

                    b.Property<decimal?>("MileagePayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("PaymentDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SelectedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("StartPostcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TravelComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("AssessmentId", "UserId");

                    b.HasIndex("ClaimStatusId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("SelectedByUserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAssessmentClaims");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UserAssessmentClaimAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AssessmentPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int?>("ClaimReference")
                        .HasColumnType("int");

                    b.Property<int?>("ClaimStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("HasBeenDeallocated")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAttendanceConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClaimable")
                        .HasColumnType("bit");

                    b.Property<int?>("Mileage")
                        .HasColumnType("int");

                    b.Property<decimal?>("MileagePayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("PaymentDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("SelectedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("StartPostcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TravelComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("UserAssessmentClaimsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UserAssessmentNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<bool?>("HasAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("NotificationTextId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("RespondedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("AssessmentId", "NotificationTextId", "UserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("NotificationTextId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAssessmentNotifications");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UserAssessmentNotificationAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasAccepted")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("NotificationTextId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("RespondedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("UserAssessmentNotificationsAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UserAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("GenderTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("GmcNumber")
                        .HasColumnType("int");

                    b.Property<bool>("HasReadTermsAndConditions")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("IdentityServerIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Section12ApprovalStatusId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("Section12ExpiryDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("AuditId");

                    b.ToTable("UsersAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UserSpeciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("SpecialityId", "UserId");

                    b.HasIndex("ModifiedByUserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSpecialities");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UserSpecialityAudit", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuditAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditDuration")
                        .HasColumnType("int");

                    b.Property<string>("AuditErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AuditResult")
                        .HasColumnType("int");

                    b.Property<bool>("AuditSuccess")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AuditId");

                    b.ToTable("UserSpecialitiesAudit");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Assessment", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "AmhpUser")
                        .WithMany("AmhpAssessments")
                        .HasForeignKey("AmhpUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.Ccg", "Ccg")
                        .WithMany("Assessments")
                        .HasForeignKey("CcgId");

                    b.HasOne("Fmas12d.Data.Entities.User", "CompletedByUser")
                        .WithMany("CompletedAssessments")
                        .HasForeignKey("CompletedByUserId");

                    b.HasOne("Fmas12d.Data.Entities.User", "CompletionConfirmationByUser")
                        .WithMany("CompletionConfirmationAssessments")
                        .HasForeignKey("CompletionConfirmationByUserId");

                    b.HasOne("Fmas12d.Data.Entities.User", "CreatedByUser")
                        .WithMany("CreatedAssessments")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.NonPaymentLocation", "NonPaymentLocation")
                        .WithMany()
                        .HasForeignKey("NonPaymentLocationId");

                    b.HasOne("Fmas12d.Data.Entities.GenderType", "PreferredDoctorGenderType")
                        .WithMany("Assessments")
                        .HasForeignKey("PreferredDoctorGenderTypeId");

                    b.HasOne("Fmas12d.Data.Entities.Referral", "Referral")
                        .WithMany("Assessments")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.Speciality", "Speciality")
                        .WithMany("Assessments")
                        .HasForeignKey("SpecialityId");

                    b.HasOne("Fmas12d.Data.Entities.UnsuccessfulAssessmentType", "UnsuccessfulAssessmentType")
                        .WithMany("Assessments")
                        .HasForeignKey("UnsuccessfulAssessmentTypeId");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDetail", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.AssessmentDetailType", "AssessmentDetailType")
                        .WithMany()
                        .HasForeignKey("AssessmentDetailTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.Assessment", "Assessment")
                        .WithMany("Details")
                        .HasForeignKey("AssessmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDetailType", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDoctor", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.Assessment", "Assessment")
                        .WithMany("Doctors")
                        .HasForeignKey("AssessmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "AttendanceConfirmedByUser")
                        .WithMany("AssessmentAttendanceConfirmations")
                        .HasForeignKey("AttendanceConfirmedByUserId");

                    b.HasOne("Fmas12d.Data.Entities.User", "DoctorUser")
                        .WithMany("DoctorAssessments")
                        .HasForeignKey("DoctorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.AssessmentDoctorStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.AssessmentDoctorStatus", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.BankDetail", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.Ccg", "Ccg")
                        .WithMany("BankDetails")
                        .HasForeignKey("CcgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "User")
                        .WithMany("BankDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Ccg", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ClaimStatus", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ContactDetail", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.Ccg", "Ccg")
                        .WithMany("ContactDetails")
                        .HasForeignKey("CcgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.ContactDetailType", "ContactDetailType")
                        .WithMany("ContactDetails")
                        .HasForeignKey("ContactDetailTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "User")
                        .WithMany("ContactDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ContactDetailType", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.DoctorStatus", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "User")
                        .WithMany("DoctorStatuses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.GenderType", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.GpPractice", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.Ccg", "Ccg")
                        .WithMany("GpPractices")
                        .HasForeignKey("CcgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.NonPaymentLocation", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.Ccg", "Ccg")
                        .WithMany("NonPaymentLocations")
                        .HasForeignKey("CcgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.NonPaymentLocationType", "NonPaymentLocationType")
                        .WithMany("NonPaymentLocations")
                        .HasForeignKey("NonPaymentLocationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.NonPaymentLocationType", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.NotificationText", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.OnCallUser", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "User")
                        .WithMany("OnCallUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Organisation", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Patient", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.Ccg", "Ccg")
                        .WithMany("Patients")
                        .HasForeignKey("CcgId");

                    b.HasOne("Fmas12d.Data.Entities.GpPractice", "GpPractice")
                        .WithMany("Patients")
                        .HasForeignKey("GpPracticeId");

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentMethod", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.Ccg", "Ccg")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("CcgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.PaymentMethodType", "PaymentMethodType")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("PaymentMethodTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "User")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentMethodType", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentRule", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.PaymentRuleSet", "PaymentRuleSet")
                        .WithMany("PaymentRules")
                        .HasForeignKey("PaymentRuleSetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.PaymentRuleSet", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.Ccg", "Ccg")
                        .WithMany("PaymentRuleSets")
                        .HasForeignKey("CcgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ProfileType", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Referral", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "CreatedByUser")
                        .WithMany("Referrals")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "LeadAmhpUser")
                        .WithMany("AmhpReferrals")
                        .HasForeignKey("LeadAmhpUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.Patient", "Patient")
                        .WithMany("Referrals")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.ReferralStatus", "ReferralStatus")
                        .WithMany()
                        .HasForeignKey("ReferralStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.ReferralStatus", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Section12ApprovalStatus", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.Speciality", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UnsuccessfulAssessmentType", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.User", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.GenderType", "GenderType")
                        .WithMany("Users")
                        .HasForeignKey("GenderTypeId");

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.Organisation", "Organisation")
                        .WithMany("Users")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.ProfileType", "ProfileType")
                        .WithMany("Users")
                        .HasForeignKey("ProfileTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.Section12ApprovalStatus", "Section12ApprovalStatus")
                        .WithMany("Users")
                        .HasForeignKey("Section12ApprovalStatusId");
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UserAssessmentClaim", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.Assessment", "Assessment")
                        .WithMany("UserAssessmentClaims")
                        .HasForeignKey("AssessmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.ClaimStatus", "ClaimStatus")
                        .WithMany("UserAssessmentClaims")
                        .HasForeignKey("ClaimStatusId");

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "SelectedByUser")
                        .WithMany("UserAssessmentClaimSelections")
                        .HasForeignKey("SelectedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "User")
                        .WithMany("UserAssessmentClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UserAssessmentNotification", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.Assessment", "Assessment")
                        .WithMany("UserAssessmentNotifications")
                        .HasForeignKey("AssessmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.NotificationText", "NotificationText")
                        .WithMany("UserAssessmentNotifications")
                        .HasForeignKey("NotificationTextId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "User")
                        .WithMany("UserAssessmentNotifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Fmas12d.Data.Entities.UserSpeciality", b =>
                {
                    b.HasOne("Fmas12d.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.Speciality", "Speciality")
                        .WithMany("UserSpecialities")
                        .HasForeignKey("SpecialityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Fmas12d.Data.Entities.User", "User")
                        .WithMany("UserSpecialities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
